name: AppConfiguration-GoProvider CI

on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    branches:
      - main
      - 'release/**'

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ["1.21", "1.22", "1.23", "1.24"]

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Install dependencies
      run: go mod download

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -race -v  ./...
      if: runner.os != 'Windows'

    - name: Test (without race detector)
      run: go test -v ./...
      if: runner.os == 'Windows'

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        cache: true

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: -exclude-dir=example ./...